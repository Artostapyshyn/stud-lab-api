CREATE TABLE IF NOT EXISTS student_friendships
(
    id         BIGSERIAL,
    friend_id  BIGINT,
    student_id BIGINT,
    PRIMARY KEY (id),
    CONSTRAINT student_friend_unique
        UNIQUE (student_id, friend_id),
    CONSTRAINT friend_id_fk
        FOREIGN KEY (friend_id) REFERENCES STUDENTS,
    CONSTRAINT student_id_fk
        FOREIGN KEY (student_id) REFERENCES STUDENTS
);

CREATE TABLE IF NOT EXISTS friend_requests
(
    id          BIGSERIAL,
    status      VARCHAR(255),
    receiver_id BIGINT,
    sender_id   BIGINT,
    PRIMARY KEY (id),
    CONSTRAINT receiver_id_fk
        FOREIGN KEY (receiver_id) REFERENCES STUDENTS,
    CONSTRAINT sender_id_fk
        FOREIGN KEY (sender_id) REFERENCES STUDENTS
);

CREATE TABLE IF NOT EXISTS event_tags
(
    event_id BIGINT NOT NULL,
    tag_id   BIGINT NOT NULL,
    CONSTRAINT pk_event_tags PRIMARY KEY (event_id, tag_id)
);

CREATE TABLE IF NOT EXISTS tags
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_tags PRIMARY KEY (id)
);

ALTER TABLE event_tags
    ADD CONSTRAINT fk_eventag_on_event FOREIGN KEY (event_id) REFERENCES events (event_id);

ALTER TABLE event_tags
    ADD CONSTRAINT fk_eventag_on_tag FOREIGN KEY (tag_id) REFERENCES tags (id);

CREATE TABLE IF NOT EXISTS sub_tags
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255)                            NOT NULL,
    main_tag_id BIGINT,
    CONSTRAINT pk_sub_tags PRIMARY KEY (id)
);

ALTER TABLE sub_tags
    ADD CONSTRAINT uc_sub_tags_name UNIQUE (name);

ALTER TABLE tags
    ADD CONSTRAINT uc_tags_name UNIQUE (name);

ALTER TABLE sub_tags
    ADD CONSTRAINT FK_SUB_TAGS_ON_MAIN_TAG FOREIGN KEY (main_tag_id) REFERENCES tags (id);

ALTER TABLE certificates
    DROP CONSTRAINT fk_certificates_student_id;

ALTER TABLE resumes
    DROP CONSTRAINT fk_resumes_student_id;

ALTER TABLE students
    DROP COLUMN can_write_comments;

ALTER TABLE complaints
    DROP COLUMN complaint_text;

ALTER TABLE complaints
    DROP COLUMN event_id;

ALTER TABLE complaints
    DROP COLUMN type;

ALTER TABLE complaints
    DROP COLUMN vacancy_id;

ALTER TABLE certificates
    ALTER COLUMN data SET NOT NULL;

ALTER TABLE resumes
    ALTER COLUMN data SET NOT NULL;

ALTER TABLE events
    ALTER COLUMN description TYPE VARCHAR(255) USING (description::VARCHAR(255));

ALTER TABLE events
    ALTER COLUMN event_type SET NOT NULL;

ALTER TABLE update_dates
    DROP COLUMN last_update_month;

ALTER TABLE update_dates
    ADD last_update_month date;

ALTER TABLE certificates
    ALTER COLUMN name SET NOT NULL;

ALTER TABLE resumes
    ALTER COLUMN name SET NOT NULL;

ALTER TABLE events
    ALTER COLUMN name_of_event TYPE VARCHAR(255) USING (name_of_event::VARCHAR(255));

ALTER TABLE certificates
    ALTER COLUMN student_id SET NOT NULL;

ALTER TABLE resumes
    ALTER COLUMN student_id SET NOT NULL;

ALTER TABLE events
    ALTER COLUMN venue TYPE VARCHAR(255) USING (venue::VARCHAR(255));