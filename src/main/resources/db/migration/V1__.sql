CREATE TABLE achievements
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       VARCHAR(255)                            NOT NULL,
    data       BYTEA                                   NOT NULL,
    student_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_achievements PRIMARY KEY (id)
);

CREATE TABLE certificates
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       VARCHAR(255)                            NOT NULL,
    data       BYTEA                                   NOT NULL,
    student_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_certificates PRIMARY KEY (id)
);

CREATE TABLE comment_likes
(
    comment_id BIGINT NOT NULL,
    student_id BIGINT NOT NULL,
    CONSTRAINT pk_comment_likes PRIMARY KEY (comment_id, student_id)
);

CREATE TABLE complaints
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    student_id       BIGINT                                  NOT NULL,
    comment_id       BIGINT                                  NOT NULL,
    status           VARCHAR(255),
    complaint_reason VARCHAR(255)                            NOT NULL,
    block_user       BOOLEAN,
    block_duration   VARCHAR(255),
    delete_comment   BOOLEAN,
    close_complaint  BOOLEAN,
    CONSTRAINT pk_complaints PRIMARY KEY (id)
);

CREATE TABLE courses
(
    course_id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    course_link        VARCHAR(255)                            NOT NULL,
    course_description VARCHAR                                 NOT NULL,
    name_of_course     VARCHAR(255)                            NOT NULL,
    course_photo       BYTEA                                   NOT NULL,
    date_of_creation   TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_courses PRIMARY KEY (course_id)
);

CREATE TABLE event_comments
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comment_text  VARCHAR(255)                            NOT NULL,
    comment_likes INTEGER,
    event_id      BIGINT                                  NOT NULL,
    student_id    BIGINT,
    CONSTRAINT pk_event_comments PRIMARY KEY (id)
);

CREATE TABLE event_counter
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_counter INTEGER                                 NOT NULL,
    CONSTRAINT pk_event_counter PRIMARY KEY (id)
);

CREATE TABLE event_tags
(
    event_id BIGINT NOT NULL,
    tag_id   BIGINT NOT NULL,
    CONSTRAINT pk_event_tags PRIMARY KEY (event_id, tag_id)
);

CREATE TABLE events
(
    event_id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    date_of_event     TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    end_date_of_event TIMESTAMP WITHOUT TIME ZONE,
    venue             VARCHAR                                 NOT NULL,
    description       VARCHAR                                 NOT NULL,
    name_of_event     VARCHAR                                 NOT NULL,
    event_type        VARCHAR(255)                            NOT NULL,
    event_photo       BYTEA,
    favorite_count    INTEGER,
    date_of_creation  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_events PRIMARY KEY (event_id)
);

CREATE TABLE favourite_events
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    student_id BIGINT                                  NOT NULL,
    event_id   BIGINT,
    CONSTRAINT pk_favourite_events PRIMARY KEY (id)
);

CREATE TABLE friend_requests
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    sender_id   BIGINT,
    receiver_id BIGINT,
    status      VARCHAR(255),
    CONSTRAINT pk_friend_requests PRIMARY KEY (id)
);

CREATE TABLE interested_students
(
    interest_id BIGINT NOT NULL,
    student_id  BIGINT NOT NULL,
    CONSTRAINT pk_interested_students PRIMARY KEY (interest_id, student_id)
);

CREATE TABLE interests
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_interests PRIMARY KEY (id)
);

CREATE TABLE majors
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_majors PRIMARY KEY (id)
);

CREATE TABLE meeting_participants
(
    meeting_id BIGINT NOT NULL,
    student_id BIGINT NOT NULL,
    CONSTRAINT pk_meeting_participants PRIMARY KEY (meeting_id, student_id)
);

CREATE TABLE meetings
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name_of_meeting VARCHAR(255)                            NOT NULL,
    date_of_meeting TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    venue           VARCHAR                                 NOT NULL,
    description     VARCHAR                                 NOT NULL,
    meeting_type    VARCHAR(255)                            NOT NULL,
    author_id       BIGINT,
    event_name      VARCHAR(255),
    CONSTRAINT pk_meetings PRIMARY KEY (id)
);

CREATE TABLE messages
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    message_content VARCHAR(255),
    time_sent       TIMESTAMP WITHOUT TIME ZONE,
    student_id      BIGINT,
    CONSTRAINT pk_messages PRIMARY KEY (id)
);

CREATE TABLE replies
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    reply_text VARCHAR(255)                            NOT NULL,
    comment_id BIGINT,
    student_id BIGINT,
    CONSTRAINT pk_replies PRIMARY KEY (id)
);

CREATE TABLE resumes
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       VARCHAR(255)                            NOT NULL,
    data       BYTEA                                   NOT NULL,
    student_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_resumes PRIMARY KEY (id)
);

CREATE TABLE slider
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    slider_photo BYTEA                                   NOT NULL,
    CONSTRAINT pk_slider PRIMARY KEY (id)
);

CREATE TABLE student_friendships
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    student_id BIGINT,
    friend_id  BIGINT,
    CONSTRAINT pk_student_friendships PRIMARY KEY (id)
);

CREATE TABLE student_services
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description     VARCHAR                                 NOT NULL,
    name_of_service VARCHAR                                 NOT NULL,
    price           VARCHAR(255)                            NOT NULL,
    rating          DOUBLE PRECISION                        NOT NULL,
    service_photo   BYTEA,
    provider_id     BIGINT,
    telegram        VARCHAR(255),
    viber           VARCHAR(255),
    whatsapp        VARCHAR(255),
    phone_number    VARCHAR(255),
    CONSTRAINT pk_student_services PRIMARY KEY (id)
);

CREATE TABLE student_statistics
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    count INTEGER,
    CONSTRAINT pk_student_statistics PRIMARY KEY (id)
);

CREATE TABLE students
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    last_name             VARCHAR(255),
    first_name            VARCHAR(255),
    major                 VARCHAR(255),
    course                VARCHAR(255),
    student_city          VARCHAR(255),
    student_photo         BYTEA,
    email                 VARCHAR(255),
    password              VARCHAR(255),
    enabled               BOOLEAN                                 NOT NULL,
    has_new_messages      BOOLEAN,
    birthday              VARCHAR(255),
    blocked_until         TIMESTAMP WITHOUT TIME ZONE,
    last_active_date_time TIMESTAMP WITHOUT TIME ZONE,
    registration_date     TIMESTAMP WITHOUT TIME ZONE,
    auth_status           VARCHAR(255),
    role                  VARCHAR(255)                            NOT NULL,
    university_id         BIGINT,
    CONSTRAINT pk_students PRIMARY KEY (id)
);

CREATE TABLE tags
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_tags PRIMARY KEY (id)
);

CREATE TABLE universities
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name              VARCHAR                                 NOT NULL,
    domain            VARCHAR(255)                            NOT NULL,
    registration_date TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_universities PRIMARY KEY (id)
);

CREATE TABLE verification_codes
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    code            INTEGER                                 NOT NULL,
    student_id      BIGINT,
    student_email   VARCHAR(255),
    expiration_date TIMESTAMP WITHOUT TIME ZONE,
    last_sent_time  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_verification_codes PRIMARY KEY (id)
);

ALTER TABLE student_friendships
    ADD CONSTRAINT uc_309313abcfb1dd091d798986f UNIQUE (student_id, friend_id);

ALTER TABLE interests
    ADD CONSTRAINT uc_interests_name UNIQUE (name);

ALTER TABLE students
    ADD CONSTRAINT uc_students_email UNIQUE (email);

ALTER TABLE tags
    ADD CONSTRAINT uc_tags_name UNIQUE (name);

CREATE INDEX idx_student_codes ON verification_codes (student_id);

CREATE INDEX idx_student_resumes ON resumes (student_id);

CREATE INDEX index_achievements_student_id ON achievements (student_id);

CREATE INDEX index_certificates_student_id ON certificates (student_id);

CREATE INDEX index_comment_id ON complaints (comment_id);

CREATE INDEX index_complaints_student_id ON complaints (student_id);

CREATE INDEX index_creationDate ON events (date_of_creation);

CREATE INDEX index_date ON events (date_of_event);

CREATE INDEX index_event_id ON event_comments (event_id);

CREATE INDEX index_fav_student_id ON favourite_events (student_id);

CREATE INDEX index_favoriteCount ON events (favorite_count);

ALTER TABLE event_comments
    ADD CONSTRAINT FK_EVENT_COMMENTS_ON_STUDENT FOREIGN KEY (student_id) REFERENCES students (id);

CREATE INDEX index_comments_student_id ON event_comments (student_id);

ALTER TABLE favourite_events
    ADD CONSTRAINT FK_FAVOURITE_EVENTS_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (event_id);

CREATE INDEX index_fav_event_id ON favourite_events (event_id);

ALTER TABLE friend_requests
    ADD CONSTRAINT FK_FRIEND_REQUESTS_ON_RECEIVER FOREIGN KEY (receiver_id) REFERENCES students (id);

CREATE INDEX idx_receiver ON friend_requests (receiver_id);

ALTER TABLE friend_requests
    ADD CONSTRAINT FK_FRIEND_REQUESTS_ON_SENDER FOREIGN KEY (sender_id) REFERENCES students (id);

CREATE INDEX idx_sender ON friend_requests (sender_id);

ALTER TABLE meetings
    ADD CONSTRAINT FK_MEETINGS_ON_AUTHOR FOREIGN KEY (author_id) REFERENCES students (id);

ALTER TABLE messages
    ADD CONSTRAINT FK_MESSAGES_ON_STUDENT FOREIGN KEY (student_id) REFERENCES students (id);

CREATE INDEX idx_student_messages ON messages (student_id);

ALTER TABLE replies
    ADD CONSTRAINT FK_REPLIES_ON_COMMENT FOREIGN KEY (comment_id) REFERENCES event_comments (id);

CREATE INDEX idx_comment_replies ON replies (comment_id);

ALTER TABLE replies
    ADD CONSTRAINT FK_REPLIES_ON_STUDENT FOREIGN KEY (student_id) REFERENCES students (id);

CREATE INDEX idx_student_replies ON replies (student_id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_UNIVERSITY FOREIGN KEY (university_id) REFERENCES universities (id);

CREATE INDEX idx_student_university ON students (university_id);

ALTER TABLE student_friendships
    ADD CONSTRAINT FK_STUDENT_FRIENDSHIPS_ON_FRIEND FOREIGN KEY (friend_id) REFERENCES students (id);

CREATE INDEX idx_friend_id ON student_friendships (friend_id);

ALTER TABLE student_friendships
    ADD CONSTRAINT FK_STUDENT_FRIENDSHIPS_ON_STUDENT FOREIGN KEY (student_id) REFERENCES students (id);

CREATE INDEX idx_friendship_student_id ON student_friendships (student_id);

ALTER TABLE student_services
    ADD CONSTRAINT FK_STUDENT_SERVICES_ON_PROVIDER FOREIGN KEY (provider_id) REFERENCES students (id);

CREATE INDEX idx_student_services ON student_services (provider_id);

ALTER TABLE comment_likes
    ADD CONSTRAINT fk_comlik_on_comment FOREIGN KEY (comment_id) REFERENCES event_comments (id);

ALTER TABLE comment_likes
    ADD CONSTRAINT fk_comlik_on_student FOREIGN KEY (student_id) REFERENCES students (id);

ALTER TABLE event_tags
    ADD CONSTRAINT fk_evetag_on_event FOREIGN KEY (event_id) REFERENCES events (event_id);

ALTER TABLE event_tags
    ADD CONSTRAINT fk_evetag_on_tag FOREIGN KEY (tag_id) REFERENCES tags (id);

ALTER TABLE interested_students
    ADD CONSTRAINT fk_intstu_on_interest FOREIGN KEY (interest_id) REFERENCES interests (id);

ALTER TABLE interested_students
    ADD CONSTRAINT fk_intstu_on_student FOREIGN KEY (student_id) REFERENCES students (id);

ALTER TABLE meeting_participants
    ADD CONSTRAINT fk_meepar_on_meeting FOREIGN KEY (meeting_id) REFERENCES meetings (id);

ALTER TABLE meeting_participants
    ADD CONSTRAINT fk_meepar_on_student FOREIGN KEY (student_id) REFERENCES students (id);